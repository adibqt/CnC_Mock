"""Add new fields to Doctor model

Revision ID: 02ba4f30c569
Revises: 
Create Date: 2025-10-21 13:04:26.305831

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '02ba4f30c569'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_admins_id'), 'admins', ['id'], unique=False)
    op.create_index(op.f('ix_admins_username'), 'admins', ['username'], unique=True)
    op.create_table('clinics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('license_number', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('services_offered', sa.JSON(), nullable=True),
    sa.Column('operating_hours', sa.String(), nullable=True),
    sa.Column('contact_person', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_number')
    )
    op.create_index(op.f('ix_clinics_clinic_name'), 'clinics', ['clinic_name'], unique=False)
    op.create_index(op.f('ix_clinics_id'), 'clinics', ['id'], unique=False)
    op.create_index(op.f('ix_clinics_phone'), 'clinics', ['phone'], unique=True)
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('specialization', sa.String(), nullable=False),
    sa.Column('license_number', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('bmdc_number', sa.String(), nullable=True),
    sa.Column('mbbs_certificate_url', sa.String(), nullable=True),
    sa.Column('fcps_certificate_url', sa.String(), nullable=True),
    sa.Column('degrees', sa.JSON(), nullable=True),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('schedule', sa.JSON(), nullable=True),
    sa.Column('qualifications', sa.String(), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('consultation_fee', sa.Float(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('languages', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_number')
    )
    op.create_index(op.f('ix_doctors_id'), 'doctors', ['id'], unique=False)
    op.create_index(op.f('ix_doctors_phone'), 'doctors', ['phone'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('PATIENT', 'DOCTOR', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.String(), nullable=True),
    sa.Column('blood_group', sa.String(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_table('ai_consultations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(), nullable=True),
    sa.Column('symptoms_extracted', sa.JSON(), nullable=True),
    sa.Column('recommended_doctors', sa.JSON(), nullable=True),
    sa.Column('conversation_context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_consultations_id'), 'ai_consultations', ['id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('appointment_date', sa.String(), nullable=False),
    sa.Column('time_slot', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'confirmed', 'completed', 'cancelled', 'no_show', name='appointmentstatus'), nullable=False),
    sa.Column('symptoms', sa.Text(), nullable=True),
    sa.Column('patient_notes', sa.Text(), nullable=True),
    sa.Column('doctor_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('pharmacies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('pharmacy_name', sa.String(), nullable=False),
    sa.Column('owner_name', sa.String(), nullable=True),
    sa.Column('license_number', sa.String(), nullable=False),
    sa.Column('street_address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('alternate_phone', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['verified_by'], ['admins.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_pharmacies_id'), 'pharmacies', ['id'], unique=False)
    op.create_index(op.f('ix_pharmacies_license_number'), 'pharmacies', ['license_number'], unique=True)
    op.create_index(op.f('ix_pharmacies_pharmacy_name'), 'pharmacies', ['pharmacy_name'], unique=False)
    op.create_index(op.f('ix_pharmacies_phone'), 'pharmacies', ['phone'], unique=True)
    op.create_table('specializations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['admins.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_specializations_id'), 'specializations', ['id'], unique=False)
    op.create_index(op.f('ix_specializations_name'), 'specializations', ['name'], unique=True)
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.String(), nullable=False),
    sa.Column('diagnosis', sa.Text(), nullable=False),
    sa.Column('medications', sa.JSON(), nullable=False),
    sa.Column('lab_tests', sa.JSON(), nullable=True),
    sa.Column('advice', sa.Text(), nullable=True),
    sa.Column('follow_up', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('appointment_id')
    )
    op.create_index(op.f('ix_prescriptions_id'), 'prescriptions', ['id'], unique=False)
    op.create_index(op.f('ix_prescriptions_prescription_id'), 'prescriptions', ['prescription_id'], unique=True)
    op.create_table('symptoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('suggested_specialization_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['admins.id'], ),
    sa.ForeignKeyConstraint(['suggested_specialization_id'], ['specializations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_symptoms_id'), 'symptoms', ['id'], unique=False)
    op.create_index(op.f('ix_symptoms_name'), 'symptoms', ['name'], unique=True)
    op.create_table('lab_test_quotation_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('lab_tests', sa.JSON(), nullable=False),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lab_test_quotation_requests_id'), 'lab_test_quotation_requests', ['id'], unique=False)
    op.create_table('quotation_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'quoted', 'accepted', 'rejected', 'cancelled', name='quotationstatus'), nullable=False),
    sa.Column('patient_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quotation_requests_id'), 'quotation_requests', ['id'], unique=False)
    op.create_table('lab_test_quotation_request_clinics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quotation_request_id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quotation_request_id'], ['lab_test_quotation_requests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quotation_request_id', 'clinic_id', name='uq_lab_request_clinic')
    )
    op.create_index(op.f('ix_lab_test_quotation_request_clinics_id'), 'lab_test_quotation_request_clinics', ['id'], unique=False)
    op.create_table('lab_test_quotation_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quotation_request_id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('test_items', sa.JSON(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('estimated_delivery', sa.String(), nullable=True),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['quotation_request_id'], ['lab_test_quotation_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lab_test_quotation_responses_id'), 'lab_test_quotation_responses', ['id'], unique=False)
    op.create_table('quotation_request_pharmacies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quotation_request_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quotation_request_id'], ['quotation_requests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quotation_request_id', 'pharmacy_id', name='uq_request_pharmacy')
    )
    op.create_index(op.f('ix_quotation_request_pharmacies_id'), 'quotation_request_pharmacies', ['id'], unique=False)
    op.create_table('quotation_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quotation_request_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('quoted_items', sa.JSON(), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('delivery_charge', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('estimated_delivery_time', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'quoted', 'accepted', 'rejected', 'cancelled', name='quotationstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacies.id'], ),
    sa.ForeignKeyConstraint(['quotation_request_id'], ['quotation_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quotation_responses_id'), 'quotation_responses', ['id'], unique=False)
    op.create_table('lab_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quotation_response_id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.String(), nullable=False),
    sa.Column('report_title', sa.String(), nullable=False),
    sa.Column('test_results', sa.JSON(), nullable=False),
    sa.Column('diagnosis_notes', sa.Text(), nullable=True),
    sa.Column('technician_name', sa.String(), nullable=True),
    sa.Column('pathologist_name', sa.String(), nullable=True),
    sa.Column('report_file_url', sa.String(), nullable=True),
    sa.Column('report_images', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('test_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('report_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['quotation_response_id'], ['lab_test_quotation_responses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lab_reports_id'), 'lab_reports', ['id'], unique=False)
    op.create_index(op.f('ix_lab_reports_report_id'), 'lab_reports', ['report_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_lab_reports_report_id'), table_name='lab_reports')
    op.drop_index(op.f('ix_lab_reports_id'), table_name='lab_reports')
    op.drop_table('lab_reports')
    op.drop_index(op.f('ix_quotation_responses_id'), table_name='quotation_responses')
    op.drop_table('quotation_responses')
    op.drop_index(op.f('ix_quotation_request_pharmacies_id'), table_name='quotation_request_pharmacies')
    op.drop_table('quotation_request_pharmacies')
    op.drop_index(op.f('ix_lab_test_quotation_responses_id'), table_name='lab_test_quotation_responses')
    op.drop_table('lab_test_quotation_responses')
    op.drop_index(op.f('ix_lab_test_quotation_request_clinics_id'), table_name='lab_test_quotation_request_clinics')
    op.drop_table('lab_test_quotation_request_clinics')
    op.drop_index(op.f('ix_quotation_requests_id'), table_name='quotation_requests')
    op.drop_table('quotation_requests')
    op.drop_index(op.f('ix_lab_test_quotation_requests_id'), table_name='lab_test_quotation_requests')
    op.drop_table('lab_test_quotation_requests')
    op.drop_index(op.f('ix_symptoms_name'), table_name='symptoms')
    op.drop_index(op.f('ix_symptoms_id'), table_name='symptoms')
    op.drop_table('symptoms')
    op.drop_index(op.f('ix_prescriptions_prescription_id'), table_name='prescriptions')
    op.drop_index(op.f('ix_prescriptions_id'), table_name='prescriptions')
    op.drop_table('prescriptions')
    op.drop_index(op.f('ix_specializations_name'), table_name='specializations')
    op.drop_index(op.f('ix_specializations_id'), table_name='specializations')
    op.drop_table('specializations')
    op.drop_index(op.f('ix_pharmacies_phone'), table_name='pharmacies')
    op.drop_index(op.f('ix_pharmacies_pharmacy_name'), table_name='pharmacies')
    op.drop_index(op.f('ix_pharmacies_license_number'), table_name='pharmacies')
    op.drop_index(op.f('ix_pharmacies_id'), table_name='pharmacies')
    op.drop_table('pharmacies')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_ai_consultations_id'), table_name='ai_consultations')
    op.drop_table('ai_consultations')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_doctors_phone'), table_name='doctors')
    op.drop_index(op.f('ix_doctors_id'), table_name='doctors')
    op.drop_table('doctors')
    op.drop_index(op.f('ix_clinics_phone'), table_name='clinics')
    op.drop_index(op.f('ix_clinics_id'), table_name='clinics')
    op.drop_index(op.f('ix_clinics_clinic_name'), table_name='clinics')
    op.drop_table('clinics')
    op.drop_index(op.f('ix_admins_username'), table_name='admins')
    op.drop_index(op.f('ix_admins_id'), table_name='admins')
    op.drop_table('admins')
    # ### end Alembic commands ###
